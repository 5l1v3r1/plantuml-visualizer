version: 2.1
executors:
  default:
    docker:
      - image: circleci/node:lts
commands:
  restore-deps:
    steps:
      - restore_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
  install-deps:
    steps:
      - run:
          name: Install dependencies
          command: |
            ls -al node_modules && rm -Rf node_modules && yarn install --production=false --frozen-lockfile && ls -al node_modules
  save-deps:
    steps:
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
jobs:
  build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          name: Show environment information
          command: |
            echo "node: $(node -v)"
            echo "yarn: $(yarn -v)"
      - restore-deps
      - install-deps
      - save-deps
      - run:
          name: Run typecheck
          command: |
            yarn typecheck
      - run:
          name: Run lint
          command: |
            yarn lint
  deploy:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore-deps
      - run:
          name: Install puppeteer dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
            ls -al node_modules
      - install-deps
      - run:
          name: Build
          command: |
            yarn build
      - run:
          name: Release
          command: |
            rm -Rf node_modules && yarn install --production=false --frozen-lockfile && ls -al node_modules && yarn run semantic-release
workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          name: deploy
          requires:
            - build
          filters:
            branches:
              only: release
